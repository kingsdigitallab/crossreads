#!/usr/bin/env python3
'''
Generated by Qwen-coder 3 30B on 15/10/2025.
Manually tweaked by GN to preserve namespaces and processing instructions.

Prompt = """
Write a python command line script that accepts a path to a folder and two strings.
The script will scan all .xml files under the given path.
For each file, if the value of any `//tei:graphic/@url` start with the first string, it will replace it with the second string.
Any change should be saved in place.
Use as little third party extensions as possible.
Make sure that nothing else in the XML file is changed. 
The namespaces, including the default one, should be the same as in the input file.
"""

Note that this adds a space before every />.
'''
import re
import os
import sys
import xml.etree.ElementTree as ET
from pathlib import Path

def replace_url_in_file(file_path, old_prefix, new_prefix):
    # if '000124' not in file_path: return

    parser = ET.XMLParser(target=ET.TreeBuilder(insert_comments=True))

    # ET doesn't preserve instructions (<?xml ?>)
    # We read them to re-insert them later
    stuff_before_root_element = ''
    xml_string = Path(file_path).read_text()
    stuff_before_root_element = re.findall(r'(?s)^(.*?)<[^?]', xml_string)

    # Register all namespaces found in the input file
    namespaces = {node: node for _, node in ET.iterparse(file_path, events=['start-ns'])}
    for ns in namespaces.keys():
        ET.register_namespace(ns[0], ns[1])
    
    print(file_path)
    tree = ET.parse(file_path, parser)
    # tree = ET.ElementTree(ET.fromstring(xml_string, PARSER))
    root = tree.getroot()
       
    # Find all graphic elements with url attributes starting with old_prefix
    for graphic in root.findall('.//{http://www.tei-c.org/ns/1.0}graphic'):
        url = graphic.get('url')
        if url and url.startswith(old_prefix):
            new_url = new_prefix + url[len(old_prefix):]
            graphic.set('url', new_url)
    
    # Save the modified XML back to the file
    # out_file_path = os.path.join(os.path.dirname(file_path), '../inscriptions2', os.path.basename(file_path))
    out_file_path = file_path
    with open(out_file_path, 'w', encoding='utf-8') as fh:
        fh.write(''.join(stuff_before_root_element))
        tree.write(fh, encoding='unicode', xml_declaration=False)

def main():
    if len(sys.argv) != 4:
        print("Usage: python replace-tei-graphic-urls.py <folder_path> <old_prefix> <new_prefix>")
        sys.exit(1)
    
    folder_path = sys.argv[1]
    old_prefix = sys.argv[2]
    new_prefix = sys.argv[3]
    
    # Walk through the folder
    for root_dir, _, files in os.walk(folder_path):
        for file in files:
            if file.endswith('.xml'):
                file_path = os.path.join(root_dir, file)
                try:
                    replace_url_in_file(file_path, old_prefix, new_prefix)
                except Exception as e:
                    print(f"Error processing {file_path}: {e}")

if __name__ == "__main__":
    main()
